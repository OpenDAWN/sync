{"version":3,"file":"server/index.js","names":[],"mappings":"","sources":["server/index.es6.js"],"sourcesContent":["/**\n * @fileoverview Server side syncronization module\n * @author Sebastien.Robaszkiewicz@ircam.fr, Norbert.Schnell@ircam.fr\n */\n'use strict';\n\nclass SyncServer {\n  constructor() {\n\n  }\n\n  \n  /** \n   * Monotonic function.\n   * \n   * @return {Number} local time in seconds\n   */\n  getLocalTime() {\n    const time = process.hrtime();\n    return time[0] + time[1] * 1e-9;\n  }\n\n  start(socket, statsCallback) {\n    socket.on('sync_ping', (id, clientPingTime) => {\n      socket.emit('sync_pong', id, clientPingTime, this.getLocalTime() );\n    });\n\n    socket.on('sync_stats', (stats) => {\n      statsCallback(stats);\n    });\n  }\n}\n\nmodule.exports = SyncServer;\n"],"sourceRoot":"/source/"}